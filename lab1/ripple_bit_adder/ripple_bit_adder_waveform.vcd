$date
	Mon Jul 22 23:10:11 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ripple_bit_adder_tb $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a_in [3:0] $end
$var reg 4 $ b_in [3:0] $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 4 & a_in [3:0] $end
$var wire 4 ' b_in [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " cout $end
$var wire 3 ) c [2:0] $end
$scope module F0 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 % c $end
$var wire 1 , carry $end
$var wire 1 - sum $end
$upscope $end
$scope module F1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 0 c $end
$var wire 1 1 carry $end
$var wire 1 2 sum $end
$upscope $end
$scope module F2 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 c $end
$var wire 1 6 carry $end
$var wire 1 7 sum $end
$upscope $end
$scope module F3 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 : c $end
$var wire 1 " carry $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
b0 )
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#20000
b10 !
b10 (
12
10
b1 )
1,
1+
1*
b1 $
b1 '
b1 #
b1 &
#30000
1;
1:
16
15
07
b1000 !
b1000 (
02
b111 )
11
14
1.
b101 $
b101 '
b11 #
b11 &
#40000
12
17
b1110 !
b1110 (
0-
0+
1/
13
1%
b110 $
b110 '
b111 #
b111 &
#50000
07
0;
05
0:
12
01
06
10
1"
b1 )
1,
b10 !
b10 (
0-
1+
0/
04
19
0.
03
18
0%
b1001 $
b1001 '
b1001 #
b1001 &
#60000
1;
17
1:
15
16
b111 )
11
b1111 !
b1111 (
1-
1/
14
1.
13
1%
b1111 $
b1111 '
b1111 #
b1111 &
#70000
